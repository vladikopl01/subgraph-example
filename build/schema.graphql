type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  transactionData: TransactionData!
}

type Token @entity {
  id: ID! # ID behaves as String
  tokenId: BigInt!
  creator: User!
  owner: User!
  approvals: [Approval!]! @derivedFrom(field: "token")
  transfers: [Transfer!]! @derivedFrom(field: "token")
}

type Approval @entity(immutable: true) {
  id: Bytes!
  token: Token!
  approved: Bytes! # address
  transactionData: TransactionData!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  token: Token!
  from: Bytes! # address
  to: Bytes! # address
  transactionData: TransactionData!
}

type User @entity {
  id: ID!
  balance: BigInt!
  tokens: [Token!]! @derivedFrom(field: "owner")
  createdTokens: [Token!]! @derivedFrom(field: "creator")
  approvalForAlls: [ApprovalForAll!]! @derivedFrom(field: "owner")
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: User!
  operator: Bytes! # address
  approved: Boolean!
  transactionData: TransactionData!
}

type TransactionData @entity(immutable: true) {
  id: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
